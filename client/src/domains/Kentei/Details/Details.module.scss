@use '~styles/partials/_colors.scss';
@use '~styles/partials/_fonts.scss';
@use '~styles/partials/_mixins.scss';

.container {
  padding: 0 1rem;

  h2 {
    font-size: 2rem;

    text-align: center;
    margin: 0.5rem 0;

    span {
      font-family: 'Poppins' sans-serif;
      font-weight: 200;

      + span {
        font-family: 'Noto Sans JP', sans-serif;
        font-weight: 100;
      }
    }
  }

  .content {
    display: flex;
    align-items: center;
    justify-content: center;

    .kanjiContainer {
      flex: 1;

      background-color: rgba(colors.$bg-primary-color, 0.75);
      border-radius: 1rem;
      border: 2px solid rgba(colors.$light-color, 0.25);

      overflow: hidden;

      .kanji {
        font-weight: 400;
        line-height: -50%;

        height: 230px; // TODO: wtf ?
        text-align: center;

        transition: all 0.2s ease-in-out;

        ._normal {
          font-size: 10rem;
          font-family: 'Noto Serif JP', sans-serif;
        }

        ._strokes {
          // can't TODO: fix this shite, so for now
          font-size: 10.775rem;
          font-family: KanjiStrokeOrders;
        }
      }

      /*
        ToggleSwitch component
      */

      fieldset {
        text-align: center;

        border: none;
        border-top: 2px solid rgba(colors.$light-color, 0.25);

        input {
          display: none;

          &:checked {
            & + label {
              color: colors.$light-color;
              text-shadow: 0 0 5px colors.$light-color, 0 0 10px colors.$light-color,
                0 0 20px colors.$light-color, 0 0 40px colors.$primary-color,
                0 0 80px colors.$primary-color, 0 0 90px colors.$primary-color,
                0 0 100px colors.$primary-color, 0 0 150px colors.$primary-color;
            }
          }
        }

        label {
          cursor: pointer;
          font-size: 1em;
          padding: 1em;

          color: colors.$light-color;

          transition: text-shadow 0.5s ease;
        }
      }
    }

    /*
      StatsItem component
    */

    .statsContainer {
      flex: 1;

      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: auto auto;
      gap: 15px 10px;

      .statsItem {
        display: flex;
        flex-direction: column;
        text-align: center;

        font-family: 'Poppins' sans-serif;

        .statsValue {
          color: colors.$light-color;
          font-weight: 600;
        }

        .statsLabel {
          color: rgba(colors.$light-color, 0.7);
          font-weight: 400;
        }
      }
    }
  }

  /*
    AddsItem component
  */

  .addsContainer {
    display: flex;
    flex-direction: column;
    margin: 2rem 0;

    .addsItem {
      display: flex;
      justify-content: space-between;
      align-items: center;

      .addsLabel {
        @include mixins.label(
          $padding-v: 0.25rem,
          $padding-h: 0.25rem,
          $color: colors.$generic-color
        );
        display: inline-block;
        text-align: center;
        width: 6rem;
      }

      .addsContent {
        display: inline-block;
        padding: 0.5rem 0.75rem;
        width: 100%;

        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;

        span {
          & + span {
            margin-left: 0.5rem;
          }
        }
      }

      .addsIcon {
        float: right;
      }
    }
  }
}

._clickable {
  cursor: pointer;
}
